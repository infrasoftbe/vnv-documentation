{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"IStructureChild": {
				"description": "The `IStructuralNode` interface defines the structure of a node in a structure. It has the following\nproperties:",
				"properties": {
					"name": {
						"type": "string",
						"description": "The `name` property is a string that represents the name of a node. It is used to identify and\nprovide a descriptive name for the node."
					},
					"id": {
						"type": "string",
						"description": "The `id` property is a string that represents the unique identifier of a node. It is used to\nuniquely identify a node within a project or data structure."
					},
					"type": {
						"type": "string",
						"enum": [
							"structure_child",
							"list_child"
						],
						"description": "The `type` property in the `INode` interface is used to specify the type of the node. It is of type\n`TNodeType`, which is a custom type defined elsewhere in the code. The `TNodeType` type is used to\ndefine the possible values for the `type` property, such as 'requirement', 'test', 'structure',\n'material', 'work', 'deliverable', 'order', and 'project'. By specifying the type of the node, it\nbecomes easier to identify and categorize different nodes in the project."
					},
					"token": {
						"type": "string",
						"description": "The `type` property in the `INode` interface is used to specify the type of the node. It is of type\n`TNodeType`, which is a custom type defined elsewhere in the code. The `TNodeType` type is used to\ndefine the possible values for the `type` property, such as 'requirement', 'test', 'structure',\n'material', 'work', 'deliverable', 'order', and 'project'. By specifying the type of the node, it\nbecomes easier to identify and categorize different nodes in the project."
					},
					"child": {
						"type": "string",
						"description": "The `child` property in the `IStructuralNode` interface is used to store the ID of the child node\nthat is connected to the current node. It represents the relationship between the parent node and\nthe child node in a data structure. By storing the ID of the child node, it becomes easier to\nnavigate and access the child nodes from the parent node."
					},
					"meta": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"name",
					"id",
					"type",
					"token",
					"child",
					"meta"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IStructureInitOptions": {
				"properties": {
					"type": {
						"type": "string"
					},
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"token": {
						"type": "string"
					},
					"meta": {
						"properties": {
							"children": {
								"items": {
									"$ref": "#/components/schemas/IStructureChild"
								},
								"type": "array"
							},
							"description": {
								"type": "string"
							}
						},
						"required": [
							"children",
							"description"
						],
						"type": "object"
					},
					"create_dt": {
						"type": "number",
						"format": "double"
					},
					"update_dt": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"type",
					"id",
					"name",
					"token",
					"create_dt",
					"update_dt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Record_string.string_": {
				"properties": {},
				"additionalProperties": {
					"type": "string"
				},
				"type": "object",
				"description": "Construct a type with a set of properties K of type T"
			},
			"ISessionUser": {
				"properties": {
					"homeAccountId": {
						"type": "string"
					},
					"tenantId": {
						"type": "string"
					},
					"username": {
						"type": "string"
					},
					"oid": {
						"type": "string"
					},
					"idToken": {
						"type": "string"
					}
				},
				"required": [
					"homeAccountId",
					"tenantId",
					"username",
					"oid",
					"idToken"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Compression": {
				"type": "string",
				"enum": [
					"STORE",
					"DEFLATE"
				]
			},
			"JSZip.JSZipObjectOptions": {
				"properties": {
					"compression": {
						"$ref": "#/components/schemas/Compression"
					}
				},
				"required": [
					"compression"
				],
				"type": "object",
				"additionalProperties": false
			},
			"JSZip.JSZipObject": {
				"properties": {
					"name": {
						"type": "string"
					},
					"unsafeOriginalName": {
						"type": "string",
						"description": "Present for files loadded with `loadAsync`. May contain \"..\" path components that could\nresult in a zip-slip attack. See https://snyk.io/research/zip-slip-vulnerability"
					},
					"dir": {
						"type": "boolean"
					},
					"date": {
						"type": "string",
						"format": "date-time"
					},
					"comment": {
						"type": "string"
					},
					"unixPermissions": {
						"anyOf": [
							{
								"type": "number",
								"format": "double"
							},
							{
								"type": "string"
							}
						],
						"nullable": true,
						"description": "The UNIX permissions of the file, if any."
					},
					"dosPermissions": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"description": "The UNIX permissions of the file, if any."
					},
					"options": {
						"$ref": "#/components/schemas/JSZip.JSZipObjectOptions"
					}
				},
				"required": [
					"name",
					"dir",
					"date",
					"comment",
					"unixPermissions",
					"dosPermissions",
					"options"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Record_string.any_": {
				"properties": {},
				"additionalProperties": {},
				"type": "object",
				"description": "Construct a type with a set of properties K of type T"
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "infrasoft-vnv-proxy-server",
		"version": "1.0.0",
		"description": "Infrasoft proxy server.",
		"license": {
			"name": "ISC"
		},
		"contact": {}
	},
	"paths": {
		"/sessions/{sessionId}/project/structures": {
			"get": {
				"operationId": "Project.Structures.getAllStructures",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {},
									"type": "array"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "Project.Structures.createOneStructure",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Record_string.string_"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {}
						}
					}
				}
			}
		},
		"/sessions/{sessionId}/project/structures/{token}": {
			"get": {
				"operationId": "Project.Structures.getOneStructure",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IStructureInitOptions"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "token",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "Project.Structures.updateOneStructure",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"security": [],
				"parameters": []
			},
			"delete": {
				"operationId": "Project.Structures.deleteOneStructure",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "boolean"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "token",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/sessions/{sessionId}/project/structures/{token}/nodes": {
			"get": {
				"operationId": "Project.Structures.getAllStructureChilds",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {},
									"type": "array"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "token",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "Project.Structures.createOneStructureChild",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IStructureInitOptions"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "token",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {}
						}
					}
				}
			},
			"put": {
				"operationId": "Project.Structures.updateOneStructureChild",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IStructureInitOptions"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "token",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {}
						}
					}
				}
			},
			"delete": {
				"operationId": "Project.Structures.deleteOneStructureChild",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IStructureInitOptions"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "token",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {}
						}
					}
				}
			}
		},
		"/sessions/{sessionId}/project/structures/{token}/nodes/{node_token}": {
			"get": {
				"operationId": "Project.Structures.getOneStructureChild",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/sessions/{sessionId}/project/structures/{token}/export": {
			"get": {
				"operationId": "Project.Structures.exportOneStructure",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/sessions": {
			"get": {
				"operationId": "Sessions.getAllSessions",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {},
									"additionalProperties": {},
									"type": "object"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "Sessions.createOneSession",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/sessions/{sessionId}": {
			"get": {
				"operationId": "Sessions.getOneSession",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"documents": {
											"items": {
												"$ref": "#/components/schemas/JSZip.JSZipObject"
											},
											"type": "array"
										},
										"_user": {
											"$ref": "#/components/schemas/ISessionUser"
										},
										"_config": {
											"properties": {},
											"type": "object"
										},
										"_id": {
											"type": "string"
										}
									},
									"required": [
										"documents",
										"_user",
										"_config",
										"_id"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "sessionId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "Sessions.updateOneSession",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"security": [],
				"parameters": []
			},
			"delete": {
				"operationId": "Sessions.deleteOneSession",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/sessions/{sessionId}/pull/{projectId}": {
			"get": {
				"operationId": "Sessions.pullOneSessionProject",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Record_string.any_"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "projectId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/sessions/{sessionId}/project/relations": {
			"get": {
				"operationId": "Project.Relations.getAllRelations",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "Project.Relations.createOneRelation",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {}
						}
					}
				}
			}
		},
		"/sessions/{sessionId}/project/relations/{token}": {
			"get": {
				"operationId": "SesProjectProj.Relations.getOneRelation",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "token",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "Project.Relations.updateOneRelation",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "token",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {}
						}
					}
				}
			},
			"delete": {
				"operationId": "Project.Relations.deleteOneRelation",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "token",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/sessions/{sessionId}/project": {
			"get": {
				"operationId": "Project.getProject",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			},
			"put": {
				"operationId": "Project.setProject",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {}
						}
					}
				}
			},
			"delete": {
				"operationId": "Project.removeProject",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/sessions/{sessionId}/project/configuration": {
			"get": {
				"operationId": "Project.getConfiguration",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/sessions/{sessionId}/project/export": {
			"get": {
				"operationId": "Project.exportAsXLS",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/sessions/{sessionId}/project/export/archive": {
			"get": {
				"operationId": "Project.exportAsZIP",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/sessions/{sessionId}/project/import/structure": {
			"post": {
				"operationId": "Project.importStructureFromXLS",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/sessions/{sessionId}/project/nodes": {
			"get": {
				"operationId": "Project.Nodes.getAllNodes",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "Project.Nodes.createOneNode",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {}
						}
					}
				}
			}
		},
		"/sessions/{sessionId}/project/nodes/{token}": {
			"get": {
				"operationId": "Project.Nodes.getOneNode",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "token",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "Project.Nodes.updateOneNode",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {}
						}
					}
				}
			},
			"delete": {
				"operationId": "Project.Nodes.deleteOneNode",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "token",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/sessions/{sessionId}/project/nodes/{token}/details": {
			"get": {
				"operationId": "Project.Nodes.getOneNodeDetails",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "token",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/sessions/{sessionId}/project/metas": {
			"get": {
				"operationId": "Project.Metadatas.getAllMetadatas",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "Project.Metadatas.createOneMetadata",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {}
						}
					}
				}
			}
		},
		"/sessions/{sessionId}/project/metas/{token}": {
			"get": {
				"operationId": "Project.Metadatas.getOneMetadata",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "token",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "Project.Metadatas.updateOneMetadata",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "token",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"delete": {
				"operationId": "Project.Metadatas.deleteOneMetadata",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "token",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/sessions/{sessionId}/import": {
			"post": {
				"operationId": "Session.importProjectFromXLS",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/sessions/{sessionId}/import/archive": {
			"post": {
				"operationId": "Session.importProjectFromZIP",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/sessions/{sessionId}/documents": {
			"get": {
				"operationId": "Session.getAllFiles",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"properties": {
											"options": {
												"$ref": "#/components/schemas/JSZip.JSZipObjectOptions"
											},
											"dosPermissions": {
												"type": "number",
												"format": "double"
											},
											"unixPermissions": {
												"anyOf": [
													{
														"type": "string"
													},
													{
														"type": "number",
														"format": "double"
													}
												]
											},
											"comment": {
												"type": "string"
											},
											"date": {
												"type": "string",
												"format": "date-time"
											},
											"dir": {
												"type": "boolean"
											},
											"unsafeOriginalName": {
												"type": "string"
											},
											"name": {
												"type": "string"
											},
											"_data": {
												"properties": {},
												"type": "object"
											}
										},
										"required": [
											"options",
											"dosPermissions",
											"unixPermissions",
											"comment",
											"date",
											"dir",
											"name",
											"_data"
										],
										"type": "object"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/sessions/{sessionId}/documents/{filePath}": {
			"get": {
				"operationId": "Session.getOneFile",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "filePath",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/sessions/{sessionId}/documents/{filePath}/download": {
			"get": {
				"operationId": "Session.downloadOneFile",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "filePath",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/sessions/{sessionId}/project/commit": {
			"post": {
				"operationId": "Project.commitProject",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}